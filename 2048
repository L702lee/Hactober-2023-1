#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define SIZE 4

int board[SIZE][SIZE];
int score;

void initialize() {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            board[i][j] = 0;
        }
    }

    score = 0;
}

void printBoard() {
    system("clear"); // For Linux/Unix. For Windows, use "cls".
    printf("2048 Game - Score: %d\n", score);
    printf("-----------------------------\n");

    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (board[i][j] == 0) {
                printf("|      ");
            } else {
                printf("| %4d ", board[i][j]);
            }
        }
        printf("|\n");
        printf("-----------------------------\n");
    }
}

int isEmpty(int x, int y) {
    return board[x][y] == 0;
}

int isGameOver() {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (isEmpty(i, j) ||
                (i < SIZE - 1 && board[i][j] == board[i + 1][j]) ||
                (j < SIZE - 1 && board[i][j] == board[i][j + 1])) {
                return 0;
            }
        }
    }
    return 1;
}

void addRandomTile() {
    int emptyCells[SIZE * SIZE][2];
    int count = 0;

    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (isEmpty(i, j)) {
                emptyCells[count][0] = i;
                emptyCells[count][1] = j;
                count++;
            }
        }
    }

    if (count > 0) {
        int index = rand() % count;
        int value = (rand() % 2 + 1) * 2; // Generate a random 2 or 4.
        int x = emptyCells[index][0];
        int y = emptyCells[index][1];
        board[x][y] = value;
    }
}

void shiftTiles(int dx, int dy) {
    int moved = 0;

    do {
        moved = 0;

        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                int x = i + dx;
                int y = j + dy;

                if (x >= 0 && x < SIZE && y >= 0 && y < SIZE) {
                    if (isEmpty(i, j) && !isEmpty(x, y)) {
                        board[i][j] = board[x][y];
                        board[x][y] = 0;
                        moved = 1;
                    } else if (board[i][j] != 0 && board[i][j] == board[x][y]) {
                        board[i][j] *= 2;
                        score += board[i][j];
                        board[x][y] = 0;
                        moved = 1;
                    }
                }
            }
        }
    } while (moved);
}

int main() {
    srand(time(NULL));
    char move;
    int gameStatus = 0;

    initialize();
    addRandomTile();
    addRandomTile();
    printBoard();

    while (1) {
        if (isGameOver()) {
            gameStatus = 1;
            break;
        }

        move = getchar();
        if (move == 'q') {
            break;
        }

        switch (move) {
            case 'w': // Up
                shiftTiles(-1, 0);
                break;
            case 's': // Down
                shiftTiles(1, 0);
                break;
            case 'a': // Left
                shiftTiles(0, -1);
                break;
            case 'd': // Right
                shiftTiles(0, 1);
                break;
        }

        if (moved) {
            addRandomTile();
            printBoard();
        }
    }

    if (gameStatus) {
        printf("Game Over! Your score: %d\n", score);
    }

    return 0;
}
